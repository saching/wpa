package models;
// Generated on the Mar 4, 2011 3:02:13 PM by Play!

import play.db.jpa.JPASupport;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Screencast generated by Play!
 */
@Entity
@Table(name="screencast"
    , uniqueConstraints = {  }
)
public class Screencast extends JPASupport implements java.io.Serializable {

    // Fields

     @Id
    
    @Column(name="id", unique=true, nullable=false, insertable=true, updatable=true)
        public int id;
    
    @Column(name="url", unique=false, nullable=false, insertable=true, updatable=true)
        public String url;
    
    @Column(name="title", unique=false, nullable=false, insertable=true, updatable=true)
        public String title;
    
    @Column(name="description", unique=false, nullable=false, insertable=true, updatable=true, length=65535)
        public String description;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="type", unique=false, nullable=false, insertable=true, updatable=true)
        public ScreencastType type;
    
    @ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="uploaded_by", unique=false, nullable=false, insertable=true, updatable=true)
        public User user;
    
    @Column(name="uploaded_on", unique=false, nullable=false, insertable=true, updatable=true, length=19)
        public Date uploadedOn;
    
    @Column(name="is_deleted", unique=false, nullable=false, insertable=true, updatable=true)
        public boolean isDeleted;
    
    @Column(name="is_reviewed", unique=false, nullable=false, insertable=true, updatable=true)
        public boolean isReviewed;

    @OneToMany(fetch = FetchType.LAZY, mappedBy="screencast")
		public List<ScreencastComment> screencastComments;
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy="screencast")
		public List<ScreencastLikes> screencastLikes;
     
    @OneToMany(fetch = FetchType.LAZY, mappedBy="screencast")
		public List<ScreencastRelated> screencastRelateds;
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy="screencast")
		public List<ScreencastViewLog> screencastViewLogs;
    // Constructors

    /** default constructor */
    public Screencast() {
    }

    /** full constructor */
    public Screencast(int id, String url, String title, String description, ScreencastType type, User uploadedBy, Date uploadedOn, boolean isDeleted, boolean isReviewed) {
       this.id = id;
       this.url = url;
       this.title = title;
       this.description = description;
       this.type = type;
       this.user = uploadedBy;
       this.uploadedOn = uploadedOn;
       this.isDeleted = isDeleted;
       this.isReviewed = isReviewed;
    }
   


}


